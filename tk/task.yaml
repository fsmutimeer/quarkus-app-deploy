apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: git-clone
  namespace: feroz-shah-dev
spec:
  workspaces:
    - name: output
      description: Directory where the repository will be cloned
  params:
    - name: url
      type: string
      description: Git repository URL
      default: "https://github.com/fsmutimeer/quarkus-app-deploy.git"
    - name: revision
      type: string
      description: Git revision (branch/tag)
      default: "feroz"
  steps:
    - name: clone-and-checkout
      image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.32.0
      script: |
        #!/bin/sh
        set -e  # Exit immediately on error
        
        # Clean workspace if it exists
        [ -d "$(workspaces.output.path)" ] && rm -rf "$(workspaces.output.path)/*" 2>/dev/null || true
        
        echo "Cloning $(params.url) into $(workspaces.output.path)"
        git clone "$(params.url)" "$(workspaces.output.path)"
        
        cd "$(workspaces.output.path)"
        echo "Checking out revision: $(params.revision)"
        git checkout "$(params.revision)"
        
        echo "Repository contents:"
        ls -la

---
aapiVersion: tekton.dev/v1
kind: Task
metadata:
  name: buildah
  namespace: feroz-shah-dev
spec:
  workspaces:
    - name: source
      description: Directory containing source code and Dockerfile
  params:
    - name: IMAGE
      type: string
      description: Image reference to build/push
    - name: DOCKERFILE_PATH
      value: "Dockerfile"  # or your custom path
      type: string
      description: Path to Dockerfile relative to workspace
      default: "Dockerfile"
  steps:
    - name: build-and-push
      image: quay.io/buildah/stable:v1.23.1
      securityContext:
        runAsUser: 1000
        capabilities:
          add: ["SETFCAP"]
      script: |
        #!/bin/sh
        set -ex
        
        # Verify Dockerfile exists
        DOCKERFILE="$(workspaces.source.path)/$(params.DOCKERFILE_PATH)"
        if [ ! -f "$DOCKERFILE" ]; then
          echo "Error: Dockerfile not found at $DOCKERFILE"
          ls -la "$(workspaces.source.path)"
          exit 1
        fi

        # Build with rootless Buildah
        buildah bud \
          --storage-driver=vfs \
          --format=docker \
          -t "$(params.IMAGE)" \
          -f "$DOCKERFILE" \
          "$(workspaces.source.path)"
        
        # Push the image
        buildah push "$(params.IMAGE)"

---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: openshift-client
  namespace: feroz-shah-dev
spec:
  params:
    - name: SCRIPT
      type: string
      description: OpenShift CLI commands to execute
    - name: VERBOSE
      type: string
      description: Enable verbose output
      default: "true"
  steps:
    - name: execute-oc-commands
      image: quay.io/openshift/origin-cli:latest
      script: |
        #!/bin/sh
        set -e
        
        [ "$(params.VERBOSE)" = "true" ] && set -x
        
        echo "Executing OpenShift commands:"
        echo "$(params.SCRIPT)"
        
        eval "$(params.SCRIPT)"
        
        echo "Commands executed successfully"